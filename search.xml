<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git的简单使用</title>
      <link href="2021/06/06/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2021/06/06/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h1><p><strong>什么是Git？</strong></p><p>Git目前是世界上最先进的分布式版本控制系统。</p><p><strong>那什么是版本控制系统？</strong></p><p>如果你用word写过长篇大论，那你一定有过的这样的经历：</p><p>想删除一个段落，又怕将来想恢复找不回来怎么办，有办法，先把文件另存为“…..”一个新的word文件，再接着改，改到一定程度，再另存为“…..”一个新文件，这样一直改下去，看着一堆乱七八糟的文件，想要保留最新的文件，却又不敢把其他的文件删掉，就怕哪天会用到，唉，真郁闷。更要命的是，有些部分需要你的同事帮助填写，于是你把文件copy给她，然后，你继续修改word文件，一天后，同事再把文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，把你的改动和她的部分合并起来，真困难。</p><p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p><p><img src="https://z3.ax1x.com/2021/06/07/2BKgh9.png"></p><p>这样，你就结束了手动管理多个“版本”的史前时代，进入到了版本控制的21世纪。</p><blockquote><p>关于git的诞生以及集中式VS分布式可以阅读：<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">Git简介</a></p></blockquote><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><ol><li><p>在windows上安装Git，可以直接在git官网[下载安装程序](<a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a>),然后默认按选项安装即可。</p><p>安装完成后，点击鼠标右键若出现“<code>Git Bash Here</code>“，则安装成功了。</p></li><li><p>点击”<code>Git Bash Here</code>“在命令行输入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your name&quot;</span>      <span class="comment">//引号里输入你的用户名</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;Your email&quot;</span>       <span class="comment">//输入你的邮箱</span></span><br></pre></td></tr></table></figure><p>因为Git是分布式版本控制系统，所以每个机器必须自报家门：你的名字和email地址。</p></li></ol><h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><ol><li><p>什么是版本库呢？版本库又名仓库，英文名<strong>repository</strong>，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p></li><li><p>创建：</p><ul><li><p>第一种方法：直接右键创建文件夹</p></li><li><p>第二种：使用命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir 文件夹名称</span><br><span class="line">cd 文件夹名称      <span class="comment">//此步是进入文件夹</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>通过 <code>git  init</code> 命令把这个目录变成Git可以管理的仓库</p></li><li><p>把文件添加到版本库</p><p>首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p><p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p><p>第一步：用命令<code>git  add</code> 告诉Git，把文件添加到仓库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add hello.txt    <span class="comment">//文件的名称，要写全</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">git add .            <span class="comment">//这是添加目录内的所有文件</span></span><br></pre></td></tr></table></figure><p>执行上面的命令，没有任何显示，这就对了，说明添加成功</p><p>第二步：把文件提交到仓库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;这是第一版&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="各种功能"><a href="#各种功能" class="headerlink" title="各种功能"></a>各种功能</h1><h2 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h2><p>在原来的文件做修改后，使用 <code>git status</code> 查看仓库当前状态，会告诉我们有文件做了修改，如果想要查看具体修改的内容，输入<code>git diff</code>  文件名</p><p>做出修改后，再把它提交到仓库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名</span><br><span class="line">    </span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;这是第二版&quot;</span></span><br></pre></td></tr></table></figure><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><p>版本控制系统有个命令可以告诉我们历史记录：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>输出的内容中：<code>commit</code> 后面跟着的内容是版本号</p><p>在git中，后面跟着HEAD的是当前版本，若要返回以前的版本，使用以下命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure><p>当你换成以前的版本后，使用<code>git log</code> 命令后发现，我的最新版不见了，这时再想要回到最新版，肿么办？</p><p>不要慌，因为我们的窗口还没有关掉，只要我们往上翻找，找到对应版本的版本号就好了！</p><p>如果退出了窗口，可以使用 <code>git reflog</code> 命令查看你的历史记录，就可以查看版本号。</p><h2 id="工作区和在暂存区："><a href="#工作区和在暂存区：" class="headerlink" title="工作区和在暂存区："></a>工作区和在暂存区：</h2><p><strong>工作区：</strong>就是你在电脑上看到的目录</p><p><strong>版本库：</strong>工作区有个隐藏的目录.git,这个不算工作区，而是git的版本库，git的版本库中存了很多东西，其中最重要就是stage的暂存区，还有git为我们自动添加的分支：<code>master</code>,以及指向master的指针叫<code>HEAD</code>。</p><p>前面说我们把文件往git版本库里添加的时候，分为2步执行：</p><ol><li><code>git add</code> :把文件添加到暂存区</li><li><code>git commit -m &quot;....&quot;</code>:把暂存区的所有内容提交到当前分支（master)，这时暂存区就变空了。</li></ol><h2 id="撤销修改："><a href="#撤销修改：" class="headerlink" title="撤销修改："></a>撤销修改：</h2><ul><li><p>场景1：当修改了工作区的内容，想直接回到修改前时,使用命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- 文件名</span><br></pre></td></tr></table></figure></li><li><p>场景2：当你修改了内容，并且放到了暂存区，想丢弃修改，需要两步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD 文件名 <span class="comment">//此步回到了场景1</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- 文件名</span><br></pre></td></tr></table></figure></li><li><p>场景3:已经提交到了版本库:参考版本回退一节，不过前提是没有推送到远程仓库（远程仓库后面会说到）</p></li></ul><h2 id="删除文件："><a href="#删除文件：" class="headerlink" title="删除文件："></a>删除文件：</h2><p>删除文件的2中方法：</p><ol><li>直接鼠标右键删除</li><li>使用命令：<code>rm </code>文件名</li></ol><p>如果你已经将文件添加到版本库，现在你有两个选择：</p><ol><li><p>你是真的想删：那么就用<code>git commit -m &quot;...&quot;</code>  提交到版本库</p></li><li><p>你是不小心删掉的，想要恢复：</p><p>因为版本库中还有呢，所以使用命令：<code>git checkout -- 文件名 </code> 就可恢复，但你只能恢复到版本库中的内容。</p></li></ol><h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><ol><li><p>这个世界上有个叫Github的神奇网站，从名字可以看出，这个网站就是提供Git仓库管理服务的，所以，只要注册一个Github账号，就可以免费会获得远程仓库。</p></li><li><p>Github仓库和本地仓库之间的传输是通过SSH加密的，所以需要一点设置：</p><ul><li><p>第一步：创建SSH Key。打开Git Bash Here</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮件&quot;</span></span><br></pre></td></tr></table></figure><p>然后一路回车，如果成功的话，会在用户的主目录中找到<code>.ssh</code>目录（一般在C盘的用户目录中），里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件的，<code>id_rsa</code>是私钥，<strong>不能随便泄露</strong>，<code>id_rsa_pub</code>是公钥，可以放心告诉任何人。</p></li><li><p>第二步：登录Github，点击<code>settings</code>，打开<code>”SSH Key&quot;</code>页面，然后点“<code>Add SSH Key</code>“ ，填上任意title，再Key文本框粘贴上id_rsa.pub文件的内容，点”<code>Add key</code>“即可。</p></li></ul></li></ol><h2 id="在github上创建仓库："><a href="#在github上创建仓库：" class="headerlink" title="在github上创建仓库："></a>在github上创建仓库：</h2><ul><li><p>右上角”<code>create a new repository</code>“,创建一个新的仓库，仓库名要和你本地的仓库名字一样，比如你创建的文件夹的名字为“test”，你的Github仓库名字必须也是这个。创建成功后，会出现一个地址，复制下来。</p></li><li><p>在本地仓库（文件夹）内打开<code>Git Bash Here</code>，运行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 刚刚你复制的地址</span><br></pre></td></tr></table></figure></li><li><p>将本地仓库推送到远端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p><p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。</p><p>这是你会发现的Github的仓库和本地的仓库一模一样了。</p><p>从现在起，只要本地作提交，只需要以下命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul><h2 id="删除远程库："><a href="#删除远程库：" class="headerlink" title="删除远程库："></a>删除远程库：</h2><p>如果添加的时候地址写错了，或者就是想删除远程库，使用以下命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><p>使用前，建议先用<code>git remote -v</code>查看远程库信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  git<span class="meta">@github</span>.com:michaelliao/learn-git.git (fetch)</span><br><span class="line">origin  git<span class="meta">@github</span>.com:michaelliao/learn-git.git (push)</span><br></pre></td></tr></table></figure><p>然后，根据名字删除，比如删除<code>origin</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br></pre></td></tr></table></figure><p>此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。</p><h2 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h2><p>上次我们讲了先有本地库，后有远程库的时候，如何关联远程库。</p><p>现在，假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。</p><ul><li><p>登录Github，创建仓库。</p></li><li><p>去本地</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure></li></ul><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><p>​    在<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退</a>里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即<code>master</code>分支。<code>HEAD</code>严格来说不是指向提交，而是指向<code>master</code>，<code>master</code>才是指向提交的，所以，<code>HEAD</code>指向的就是当前分支。</p><p>每次提交，<code>master</code>分支都会向前移动一步，这样，随着你不断提交，<code>master</code>分支的线也越来越长。当我们创建新的分支，例如<code>dev</code>时，Git新建了一个指针叫<code>dev</code>，指向<code>master</code>相同的提交，再把<code>HEAD</code>指向<code>dev</code>，就表示当前分支在<code>dev</code>上。</p><p>​     你看，Git创建一个分支很快，因为除了增加一个<code>dev</code>指针，改改<code>HEAD</code>的指向，工作区的文件都没有任何变化！不过，从现在开始，对工作区的修改和提交就是针对<code>dev</code>分支了，比如新提交一次后，<code>dev</code>指针往前移动一步，而<code>master</code>指针不变。</p><p>​     假如我们在<code>dev</code>上的工作完成了，就可以把<code>dev</code>合并到<code>master</code>上。Git怎么合并呢？最简单的方法，就是直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并。</p><h2 id="创建与合并分支"><a href="#创建与合并分支" class="headerlink" title="创建与合并分支"></a>创建与合并分支</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b dev     <span class="comment">//创建并切换</span></span><br><span class="line">    </span><br><span class="line"> <span class="comment">//或者</span></span><br><span class="line">git <span class="keyword">switch</span> -c dev</span><br></pre></td></tr></table></figure><p>查看分支</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch               <span class="comment">//会列出所有分支，在当前分支前面加一个*</span></span><br></pre></td></tr></table></figure><p>然后，我们就可以在dev分支上正常提交</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名</span><br><span class="line">    </span><br><span class="line">git commit -m <span class="string">&quot;......&quot;</span></span><br></pre></td></tr></table></figure><p>现在，<code>dev</code>分支上的工作完成，我们就可以切换到master分支</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">    </span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">git <span class="keyword">switch</span> master</span><br></pre></td></tr></table></figure><p>切换到<code>master</code>分支后,我们打开文件发现刚才修改的内容不见了，这是因为那个提交是在dev分枝上，而master分支此刻的提交点没有变。</p><p>我们把<code>dev</code>分支合并到master分支上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev           <span class="comment">//表示将目标分支合并到当前分支</span></span><br></pre></td></tr></table></figure><p>合并完成后，就可以删除dev分支了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure><p>再查看分支：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>会发现<code>dev</code>分支不见了</p><h2 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h2><p>当我们在<code>dev</code>分支修改内容后，切换到master分支，又在同样地方不小心修改了一些内容，两者发生了冲突，合并时就会报错。</p><p>这时就需要我们手动改回来，再进行合并。</p><p>（可以用<code>git log --graph</code>产看分支合并图）。</p><blockquote><p>此文章是关于Git的一些简单使用，想要查看更多使用方法，参考里廖雪峰老师的<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a>.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="2021/06/02/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>2021/06/02/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="标签的语法"><a href="#标签的语法" class="headerlink" title="标签的语法"></a>标签的语法</h1><ul><li><p>标签由英文&lt;&gt;括起来，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>标签一般成双出现，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;<span class="regexp">/p&gt;  &lt;h1&gt;&lt;/</span>h1&gt; <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>标签不区分大小写，但大部分程序员用小写。</p></li></ul><h1 id="HTMl文档结构"><a href="#HTMl文档结构" class="headerlink" title="HTMl文档结构"></a>HTMl文档结构</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> &lt;html&gt;&lt;<span class="regexp">/html&gt;标签对：&lt;html&gt;位于文档的最前面，用来标识文档的开始；&lt;/</span>html&gt;用于文档的最后面，用来标识文档的结束。中间部分是文档的头部（head）和主体（body）。</span><br><span class="line"></span><br><span class="line">&lt;head&gt;&lt;/head&gt;标签对：包含一些文档的信息，可以包含文档的辅助性标签，</span><br><span class="line">例如：&lt;title&gt;&lt;/title&gt;:标题</span><br><span class="line"></span><br><span class="line">     &lt;style&gt;&lt;/style&gt;:用来修改文件的样式</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;&lt;/script&gt; </span><br><span class="line"></span><br><span class="line">     <span class="xml"><span class="tag">&lt;<span class="name">link</span>/&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">meta</span>/&gt;</span></span></span><br><span class="line">  </span><br><span class="line">     &lt;meta charset=&quot;UTF-8&quot;&gt;:设置当前文件字符编码</span><br><span class="line"></span><br><span class="line"> 但是浏览器只会显示&lt;title&gt;的内容。</span><br><span class="line"></span><br><span class="line">&lt;body&gt;&lt;/body&gt;:中间放html的主要内容。</span><br><span class="line"></span><br><span class="line">注释文字：&lt;!--注释文字--&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="各种标签"><a href="#各种标签" class="headerlink" title="各种标签"></a>各种标签</h1><p><em><strong>语义化标签</strong></em></p><ul><li><p>段落标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt; 段落文本&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>自定义样式标签:<span>文字</span></p><p>需要在head标签中使用style标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>了不起的盖茨比<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">span</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>:blue;//将字体设置为蓝色</span></span></span><br><span class="line"><span class="css"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>标题标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;<span class="regexp">/h1&gt; &lt;h2&gt;&lt;/</span>h2&gt;....共有<span class="number">6</span>级，字号逐级递减</span><br></pre></td></tr></table></figure></li><li><p>为网页划分独立板块：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;内容&lt;/div&gt; 相当于一个容器，将内容放在里面，将各个部分划分开。</span><br></pre></td></tr></table></figure></li><li><p>头部标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;我是头部标签&lt;/header&gt;</span><br></pre></td></tr></table></figure></li><li><p>底部标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer&gt; 我是底部标签&lt;/footer&gt;</span><br></pre></td></tr></table></figure></li><li><p>正文标签：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;section&gt;我是一个区域&lt;/section&gt;</span><br></pre></td></tr></table></figure></li><li><p>侧边栏标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aside&gt;我是侧边栏&lt;/aside&gt;</span><br></pre></td></tr></table></figure><p><em><strong>效果标签</strong></em></p><hr></li><li><p>换行标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;br /&gt;直接在换行的部分输入</span><br></pre></td></tr></table></figure></li><li><p>空格标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;nbsp</span><br></pre></td></tr></table></figure></li><li><p>水平分割线：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr /&gt;</span><br></pre></td></tr></table></figure><p><em><strong>列表标签</strong></em></p><hr></li><li><p>无序列表：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#&lt;ul&gt;&lt;li&gt;内容&lt;li&gt;&lt;ul&gt;</span><br><span class="line">    </span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt; 我的第一个列表信息&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我的第二个列表信息&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>有序列表：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#&lt;ol&gt;&lt;li&gt;内容&lt;li&gt;&lt;ol&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li&gt;我的第一个列表信息&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;我的第二个列表信息&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>为网页添加图片</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;E:/HTML/笔记/图片的地址&quot;</span> alt=<span class="string">&quot;图片下载失败时的替换文本&quot;</span> title=<span class="string">&quot;提示文本&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">src:图像的位置   alt:替换文本  title:当鼠标划过该图片时显示的文字  图像可以是GIF、PNG、IPEG格式</span><br></pre></td></tr></table></figure></li><li><p>网页链接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;网址&quot;</span>  title=<span class="string">&quot;提示文本&quot;</span>&gt;链接显示的文本&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>在浏览器窗口打开链接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;http://www.baidu.com&quot;</span> target=<span class="string">&quot;_self&quot;</span>&gt;百度&lt;/a&gt;:target=<span class="string">&quot;_self&quot;</span>在当前页面打开链接</span><br><span class="line"></span><br><span class="line">target=”_blank<span class="string">&quot;:新建窗口打开链接</span></span><br></pre></td></tr></table></figure></li><li><p>表格标签</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;/table&gt;:用来定义整个表格</span><br><span class="line"></span><br><span class="line">border=<span class="string">&quot;1&quot;</span>:用来加边框</span><br><span class="line"></span><br><span class="line">&lt;caption&gt;&lt;/caption&gt;:表格的标题</span><br><span class="line"></span><br><span class="line">&lt;tr&gt;&lt;/tr&gt;表示一行</span><br><span class="line"></span><br><span class="line">&lt;th&gt;&lt;/th&gt;:一列，有加粗效果</span><br><span class="line"></span><br><span class="line">&lt;td&gt;&lt;/td&gt;:一列，无加粗效果</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;学习表格标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table border=&quot;1&quot;&gt;</span><br><span class="line">        &lt;caption&gt;前端三剑客&lt;/caption&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;知识点&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;重要程度&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;难度&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;学习周期&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;html&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;5星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;3星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;7天&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;css&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;5星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;4星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;10天&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;js&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;5星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;5星&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;20天&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210420201516775.png" alt="image-20210420201516775"></p><p>使用thead、tbody、tfooyt定义表格</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>&lt;thead&gt;标签表示表格头部,一般放&lt;tr&gt;和&lt;th&gt;标签。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>&lt;tbody&gt;标签表示表格内容,一般放&lt;tr&gt;和&lt;td&gt;标签。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、&lt;tfoot&gt;标签标签表格脚部标注,一般放&lt;tr&gt;和&lt;td&gt;标签。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、对表格中的行进行分组，这种划分使浏览器有能力支持独立于表格标题和页脚的正文滚动，当长的表格被打印时，表格的表头和页脚也就可被打印在包含表格数据的每张页面上。</span><br></pre></td></tr></table></figure><h1 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h1><p>1.表单是可以把浏览器输入的数据传送到服务器端，这样服务器端的程序就可以处理表单传过来的数据。</p><p>2.语法:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;传送方式&quot;</span>  action=<span class="string">&quot;服务器文件&quot;</span>&gt; &lt;/form&gt;</span><br></pre></td></tr></table></figure><p>3.用户名密码：</p><p>type:</p><ul><li>text：输入框为文本输入框</li><li>password：密码输入框</li></ul><p>name:为文本框命名</p><p>value:为文本框设置默认值，一般起到提示作用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text/password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;文本&quot;</span> /&gt;</span></span> &lt;/form&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>给点提示：placeholder属性的使用</p><p>placeholder属性为输入框占位符，里面可以放提示的输入信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;input-placeholder&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot; &gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">    &lt;input type=&quot;password&quot; placeholder=&quot;请输入密码&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210426193217809.png" alt="image-20210426193217809"></p></li><li><p>数字输入框</p><p>type=”number”数字框只能输入数字，最后面有个加减号用来调整数字大小。</p></li><li><p>网址输入框</p><p>type=”url” 内容必须以http：或者https：开头</p></li><li><p>邮箱输入框：type=”email”</p></li><li><p>创建文本域：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea cols=<span class="string">&quot;行数“ orws=&quot;</span>列数” &gt;在这里输入内容&lt;/textarea&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span>在这里输入内容...<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ul><p>​        9.label标签，为input标签穿上衣服：</p><p>​          注意：for属性中的值应当与相关控件的id属性值相同</p><p>​          当点击该标签时，自动跳转到下相对应控件的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">javascript</span><br><span class="line">&lt;form&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;uname&quot;</span>&gt;</span>输入你的用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">     <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">     <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pass&quot;</span>&gt;</span>请输入密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure><p> 10.单选框和复选框</p><ul><li><p>type：当type=”radio”时，控件为单选框</p><p>​            当type=”checkbox”时，控件为复选框</p></li><li><p>value:提交到后台服务器，共后台使用</p></li><li><p>name：为控件命名，以备后台程序ASP、PHP使用，单选时选项的名字必须相同</p></li><li><p>当设置checked=”checked”时，该选项被默认选中</p><img src="http://img.mukewang.com/52e5f7c60001a23f07360267.jpg" alt="img" style="zoom: 80%;" /></li></ul><p>​        <img src="http://img.mukewang.com/52e5f8010001159804900257.jpg" alt="img"></p><p>11.创建下拉菜单</p><ul><li><p>select和option标签都是双标签</p></li><li><p>select标签内只能放option标签，表示下拉菜单的选项</p></li><li><p>option标签放选型内容，不放置其他标签</p></li><li><p>value：提交到服务器的值</p></li><li><p>当设置成selected=”selected”时，该选项被默认选中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">   <span class="xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span> </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;看书&quot;</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;游戏&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>游戏<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;    </span><br></pre></td></tr></table></figure></li></ul><p>12.提交按钮</p><p>​      type=”submit” value=”按钮上显示的字”</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;    <span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;save.php&quot;</span>&gt;</span>        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;myName&quot;</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span>        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot; &quot;</span> <span class="attr">name</span>=<span class="string">&quot;myName &quot;</span> /&gt;</span>        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submitBtn&quot;</span> /&gt;</span>    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span>&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="http://img.mukewang.com/52e6126f0001496a04480218.jpg" alt="img"></p><p>13.重置按钮</p><p>type=”reset” 与提交按钮类似</p>]]></content>
      
      
      <categories>
          
          <category> 前端三剑客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="2021/05/31/CSS%E5%9F%BA%E7%A1%80/"/>
      <url>2021/05/31/CSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h1><p>css样式由选择符和声明组成，声明又由属性和值组成</p><p><img src="http://img.mukewang.com/52fde5c30001b0fe03030117.jpg" alt="img"></p><ol><li><p>给段落文字添加样式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">p&#123;</span><br><span class="line">    font-size:12px;<span class="comment">//字体大小</span></span><br><span class="line">    color:red；<span class="comment">//字体颜色</span></span><br><span class="line">    font-weight:bold;<span class="comment">//字体加粗</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>为短语设置</p><p>将文字放置：<span>文字</span></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    span&#123;</span><br><span class="line">        <span class="attr">color</span>:red;</span><br><span class="line">    &#125;</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>慕课网<span class="tag">&lt;<span class="name">span</span>&gt;</span>超酷的互联网<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure></li><li><p>添加注释语句：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*内容*/</span></span><br></pre></td></tr></table></figure></li><li><p>内联式css样式</p><p>就是把css代码直接写在HTML标签中，并且写在开始标签中，写在双引号中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=<span class="string">&quot;font-size:12px;color:red;&quot;</span>&gt;内容&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>嵌入式css样式：</p><p>就是把css代码写在<style type="text/cs"></style>之间</p><p>嵌入式样式一般写在<head></head>之间</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>嵌入式css样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">span</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>:blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>外联式css样式：</p><p>就是把代码单独写在文件内，该文件后缀为css，再在html文件中使用<link>标签经css文件链接到html文件内。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href=<span class="string">&quot;base.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>css文件名称以有意义的英文字母命名，如main.css</li><li>rel=”stylesheet” type=”text/css”是固定写法不可修改</li><li><link>标签位置一般在<head>标签内部</li></ul><p><em><strong>以上三种样式实施就近原则，即：内联式&gt;嵌入式&gt;外联式</strong></em></p></li></ol><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><ol><li><p><strong>标签选择器</strong>：就是html代码中的标签，例如：<html><body><h1><p><img></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h1&#123;</span><br><span class="line">    font-weight:normal;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>类选择器：</strong></p><ul><li><p>语法：.类选择器名称{ 代码}，要以英文圆点开头。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    .stress &#123;</span><br><span class="line">        <span class="attr">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>设置类：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;stress&quot;</span>&gt;勇气&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>ID选择器</strong>：</p><ul><li><p>使用id选择器必须为标签添加id属性</p></li><li><p>Id选择符的前面是#（井号），不是英文原点</p></li><li><p>id属性的值尽量见名思意，语义化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;    #stress&#123;<span class="attr">color</span>:red;&#125;&lt;<span class="regexp">/style&gt;&lt;body&gt;    &lt;div id=&quot;stress&quot;&gt;内容&lt;/</span>div&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>*<em>id选择器和类选泽器的区别：</em></p><ul><li>相同点：可以应用于任何元素</li><li>不同点：<ul><li>ID选择器只能在文档中使用一次，类选择器可以使用多次</li><li>可以使用类选择器词列表方法为一个元素同时设置多个样式，ID选择器不可以。</li></ul></li></ul></li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.stress&#123;      <span class="attr">color</span>:red;  &#125;  .bigsize&#123;      font-size:25px;  &#125;  &lt;p&gt;到了&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;stress bigsize&quot;</span>&gt;三年级&lt;<span class="regexp">/span&gt;下学期时，我们班上了一节公开课...&lt;/</span>p&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>子选择器</p><p>即大于符号(&gt;),用于选择指定目标元素的<strong>第一代</strong>子元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">   &lt;head&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>子选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*添加边框样式（粗细为1px， 颜色为红色的实线）*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.food</span>&gt;<span class="selector-tag">li</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span></span><br><span class="line"><span class="css"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;food&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>水果</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>蔬菜</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>白菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>油菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>卷心菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210427194831518.png" alt="image-20210427194831518"></p></li><li><p>后代选择器</p><p>即加入空格，用于选择指定元素标签下的后辈元素（所有后代元素）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.food li &#123;        <span class="comment">/*添加边框样式（粗细为1px， 颜色为红色的实线）*/</span>        border: 1px solid red;    &#125;&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;food&quot;</span>&gt;        <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>水果            <span class="tag">&lt;<span class="name">ul</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="name">li</span>&gt;</span>            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>        <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>蔬菜            <span class="tag">&lt;<span class="name">ul</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>白菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>油菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span>                <span class="tag">&lt;<span class="name">li</span>&gt;</span>卷心菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span>            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>    &lt;/ul&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210427195121124.png" alt="image-20210427195121124"></p></li><li><p>通用选择器</p><p>使用*号指定，作用是匹配html中所有标签元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;    * &#123;        <span class="attr">color</span>: red;        font-size:20px;    &#125;    &lt;<span class="regexp">/style&gt;&lt;/</span>head&gt;<span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>    <span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个胆小如鼠的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个勇气来回答老师提出的问题。学校举办的活动我也没勇气参加。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    <span class="tag">&lt;<span class="name">p</span>&gt;</span>到了三年级下学期时，我们班上了一节公开课，老师提出了一个很简单的问题，班里很多同学都举手了，甚至成绩比我差很多的，也举手了，还说着：&quot;我来，我来。&quot;我环顾了四周，就我没有举手。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://img.mukewang.com/52b4113500018cf102000200.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210427195407578.png" alt="image-20210427195407578"></p></li><li><p>伪类选择器</p><p>它允许给html中不存在的标签（标签的某种状态）设置样式，例如给一个标签元素的<strong>鼠标滑过状态</strong>来设置字体颜色。</p><p>关于伪选择符：a：hover目前可以兼容所有浏览器。其实，：hover可以放在任意的标签，比如p：hover，但是他们的兼容性不是很好。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    a:hover &#123;</span><br><span class="line">        <span class="attr">color</span>: red;</span><br><span class="line">        font-size:20px;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.imooc.com&quot;</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个勇气来回答老师提出的问题。学校举办的活动我也没勇气参加。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>到了三年级下学期时，我们班上了一节公开课，老师提出了一个很<span class="tag">&lt;<span class="name">span</span>&gt;</span>简单<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的问题，班里很多同学都举手了，甚至成绩比我差很多的，也举手了，还说着：&quot;我来，我来。&quot;我环顾了四周，就我没有举手。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://img.mukewang.com/52b4113500018cf102000200.jpg&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210427200045536.png" alt="image-20210427200045536"></p></li><li><p>分组选择器</p><p>当你想为html中多个标签元素设置同一个样式，可以使用分组选择器（，）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.first,#second span&#123;</span><br><span class="line">       <span class="attr">color</span>:green;</span><br><span class="line">   &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个勇气来回答老师提出的问题。学校举办的活动我也没勇气参加。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>到了三年级下学期时，我们班上了一节公开课，老师提出了一个很<span class="tag">&lt;<span class="name">span</span>&gt;</span>简单<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的问题，班里很多同学都举手了，甚至成绩比我差很多的，也举手了，还说着：&quot;我来，我来。&quot;我环顾了四周，就我没有举手。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://img.mukewang.com/52b4113500018cf102000200.jpg&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210427200604328.png" alt="image-20210427200604328"></p></li></ol><h1 id="css3的继承与选择器优先级"><a href="#css3的继承与选择器优先级" class="headerlink" title="css3的继承与选择器优先级"></a>css3的继承与选择器优先级</h1><ol><li><p>样式的继承</p><p>继承是一种规则，它允许样式不仅应用于某个特定的html元素，而且应用于其后代。但是某些css样式不允许继承，例如：border：1px solid red；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;    p &#123;        <span class="attr">color</span>: red;        border:1px solid red;    &#125;&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;first&quot;</span>&gt;三年级时，我还是一个&lt;span&gt;胆小如鼠&lt;<span class="regexp">/span&gt;的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个勇气来回答老师提出的问题。学校举办的活动我也没勇气参加。&lt;/</span>p&gt;    <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>到了三年级下学期时，我们班上了一节公开课，老师提出了一个很<span class="tag">&lt;<span class="name">span</span>&gt;</span>简单<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的问题，班里很多同学都举手了，甚至成绩比我差很多的，也举手了，还说着：&quot;我来，我来。&quot;我环顾了四周，就我没有举手。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>选择器的优先级</p><p>内联样式&gt;id选择器&gt;类选择器&gt;标签选择器&gt;通配符选择器（*）</p></li><li><p>权值计算—特殊性</p><p>先执行权值高的css样式</p><p><strong>标签的权值为1；类选择符的权值为10；ID选择符的权值为100；继承的权值比较也特殊，有的文献显示它为0.1，可以理解为继承的权值最低。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;<span class="attr">color</span>:red;&#125; <span class="comment">/*权值为1*/</span>p span&#123;<span class="attr">color</span>:green;&#125; <span class="comment">/*权值为1+1=2*/</span>.warning&#123;<span class="attr">color</span>:white;&#125; <span class="comment">/*权值为10*/</span>p span.warning&#123;<span class="attr">color</span>:purple;&#125; <span class="comment">/*权值为1+1+10=12*/</span>#footer .note p&#123;<span class="attr">color</span>:yellow;&#125; <span class="comment">/*权值为100+10+1=111*/</span></span><br></pre></td></tr></table></figure></li><li><p>选择器最高优先级</p><p>在分号前面加入！important</p></li></ol><h1 id="换字体"><a href="#换字体" class="headerlink" title="换字体"></a>换字体</h1><ol><li><p>使用font-family换字体样式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body&#123;    font-family:<span class="string">&quot;宋体&quot;</span>;    font-family:<span class="string">&quot;Microsoft Yahei&quot;</span>; 或者 font-family:<span class="string">&quot;微软雅黑&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>注意：不要设置不常用的字体，用户是否显示字体取决于该电脑上是否安装字体。</p></li><li><p>font-size换字体大小</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123;        font-size: 12px;    &#125;</span><br></pre></td></tr></table></figure></li><li><p>font-weight设置字体粗细</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,span &#123;        font-weight: bold;    &#125;</span><br></pre></td></tr></table></figure></li><li><p>设置字体倾斜样式</p><p>font-style:normal  //正常</p><p>font-style:italic  //斜体</p><p>font-style:oblique //强制将字体倾斜</p></li><li><p>设置颜色</p><ul><li><p>英文命令颜色：color:red;</p></li><li><p>RGB颜色：与photoshop颜色一致，由Red（红色）、Green（绿色）、Blue（蓝色）三种颜色按比例配色，每一项可以是0-255的整数，也可以是百分数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color:rgb(<span class="number">100</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure></li><li><p>十六进制颜色</p><p>原理也是RGB设置，但是每一项的值由数字变成了00–ff</p><p>color：#00ffff；</p><p><img src="http://img.mukewang.com/54c5b4120001f20808000902.jpg" alt="img"></p></li></ul></li><li><p>font样式的简写方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body&#123;    font-style:italic;    font-weight:bold;    font-size:12px;    font-height:<span class="number">1.</span>5em;    font-family:<span class="string">&quot;宋体&quot;</span>，sans-serif;&#125;</span><br></pre></td></tr></table></figure><p>可以简写成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    <span class="attr">font</span>:italic bold 12px/<span class="number">1.</span>5em <span class="string">&quot;宋体&quot;</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用这一简写方式至少要指定fony-size和font-family属性，其他属性（font-weight、font-style、font-variant、line-height)如果未指定则使用默认值。</p></li><li><p>在缩写font-size和line-height中间要加入“/“斜杠。</p></li><li><p>一般情况下面比较常用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    <span class="attr">font</span>:12px/<span class="number">1.</span>5em <span class="string">&quot;宋体&quot;</span>,sanss-serif</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h1><ol><li><p>使用text-decoration为文本添加样式</p><p>text -decoration的默认样式为none</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    .box1&#123;</span><br><span class="line">        text-decoration:overline  <span class="comment">/*在文本上添加装饰线*/</span></span><br><span class="line">        text-decoration:underline <span class="comment">/*在文本下添加装饰线*/</span></span><br><span class="line">        text-decoration:line-through <span class="comment">/*装饰线穿过文本,一般用于商品折扣价*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>首行缩进</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;    text-indent:2em; <span class="comment">/*2em意思为文字的2倍大小*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>行间距</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;    line-height:2em;<span class="comment">/*行间距为2倍*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>为中文、英文设置间距</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h1&#123;    letter-spacing:50px;<span class="comment">/*英文字母间距为50px或者中文文字的间距*/</span>    word-spacing:50px；<span class="comment">/*英文单词的间距*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置文本对齐方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h1&#123;    text-align:center;<span class="comment">/*居中*/</span>    text-align:left;<span class="comment">/*左对齐*/</span>    text-align:right;<span class="comment">/*右对齐*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>长度值</p><p>长度单位目前常用：px(像素)、em、%百分比，这三种单位都是相对单位。</p><ul><li><p>像素</p><p>像素指的是显示器上的小点（css规范中假设“90像素=1英寸’’).实际情况是浏览器会使用显示器的实际像素有关。</p></li><li><p>em</p><p>就是本元素给定字体的font-size的值，如果元素的font-size为18px，那么1em=18px。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;    font-size:12px;    text-indent:2em;<span class="comment">/*首行缩进24px，两个文字的距离*/</span>&#125;</span><br></pre></td></tr></table></figure><p>当给font-size的值设置为em时，此时计算的标准以p的父元素的font-size为基础。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;    font-size:14px;&#125;span&#123;    font-size:<span class="number">0.</span>8em;<span class="comment">/*字体大小为11.2px 12*0.8=11.2；*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>百分比</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;    font-size:12px;    line-height:<span class="number">130</span>% <span class="comment">/*行间距为字体的130%*/</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="元素分类"><a href="#元素分类" class="headerlink" title="元素分类"></a>元素分类</h1><ol><li><p>标签元素分为三类：<strong>块状元素、内联元素（又叫行内元素）、内联块状元素。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">块状元素：&lt;div&gt; &lt;p&gt; &lt;h1&gt;...&lt;h6&gt; &lt;ol&gt; &lt;ul&gt; &lt;dl&gt; &lt;table&gt; &lt;address&gt; &lt;blockquote&gt; &lt;form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内联元素&lt;a&gt; &lt;span&gt; &lt;br&gt; &lt;i&gt; &lt;em&gt; &lt;strong&gt; &lt;label&gt; &lt;q&gt; &lt;<span class="keyword">var</span>&gt; &lt;cite&gt; &lt;code&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内联块状元素&lt;img&gt; &lt;input&gt;</span><br></pre></td></tr></table></figure></li><li><p>块状元素：</p><p>特点：</p><ul><li>块状元素独占一行，并且其后的元素另起一行，</li><li>元素的高度、宽度、行高以及底边间距都可以设置</li><li>元素宽度在不设置的情况下，是它本身父容器的100%（和父容器的宽度一样）。</li></ul><p><strong>将其他类型元素转化为块状元素</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#123;    <span class="attr">display</span>:block;<span class="comment">/*将内联元素转化成块状元素*/</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>内联元素</p><p>特点：</p><ul><li>和其他元素都在一行</li><li>元素的高度、宽度、顶部和底部的间距<strong>不可</strong>设置</li><li>元素的宽度就是它包含的文字或者图片的宽度，不可改变。</li><li>内联元素之间有间距。</li></ul><p><strong>将其他类型转化为内联元素</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">display</span>:inline;&#125;</span><br></pre></td></tr></table></figure></li><li><p>内联块状元素</p><p>特点：</p><ul><li>和其他元素在一行上</li><li>元素的宽度、高度、行高以及顶部和底部的间距可以设置</li></ul><p>转化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    <span class="attr">display</span>:inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将元素隐藏</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    <span class="attr">display</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>盒子模型</p><p>盒子模型包括<strong>内填充（padding）、外边距（margin）、边框（border）</strong>，他们都有四个方向(top、bottom、left、right)</p><p>盒子模型的实际高度是元素本身的大小加上上下内填充和上下边框、上下边距，宽度是元素本身大小加上左右内填充和左右边框、左右边距。</p><p><img src="http://img.mukewang.com/543b4cae0001b34304300350.jpg" alt="img"></p><p><img src="http://img.mukewang.com/539fbb3a0001304305570259.jpg" alt="img"></p></li><li><p>设置背景色</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    backgroud-color:red;&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加边框</p><p>三个属性：粗细、样式、颜色</p><p>两种写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">border</span>:2px solid red;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    border-width:2px;    border-style；solid；    border-color:red;&#125;</span><br></pre></td></tr></table></figure><ul><li>边框样式：<ul><li>实线：solid</li><li>虚线：dashed</li><li>点线：dotted</li></ul></li><li>颜色：样式与字体相同</li><li>宽度：一般用像素表示，也可设置为thin|medium|thick</li></ul></li><li><p>单独为一个方向设置边框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    border-top:1px solid red;    border-bottom:2px dotted red;    border-left:1px dashed green;    border-right:2px dashed green;&#125;</span><br></pre></td></tr></table></figure></li><li><p>为边框设置圆角</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    border-radius:10px 10px 20px 30px;&#125; <span class="comment">/*依次为左上，右上，右下，左下</span></span><br></pre></td></tr></table></figure><p>也可以分开写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    border-top-left-radius:10px;    border-top-right-radius:20px;    border-bottom-left-radius:10px;    border-bottom-right-radius:20px;&#125;</span><br></pre></td></tr></table></figure><p><strong>如果四个圆角都为10px</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    border-radius:10px;&#125;</span><br></pre></td></tr></table></figure><p><strong>如果左上角和右下角一样为10px，右上角和左下角一样为20px</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dov&#123;    border-radius:10px 20px;&#125;</span><br></pre></td></tr></table></figure><p><strong>特别注意：一个正方形，当设置圆角效果为元素宽度的一半时，显示效果为圆形。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">width</span>:200px;    height:200px;    border:5px solid red;    border-radius:100px;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.mukewang.com/5e957ad10001740003340337.jpg" alt="img"></p></li><li><p>为盒子设置内填充</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    <span class="attr">padding</span>:20px 10px 20px 30px ;</span><br><span class="line">&#125;<span class="comment">/*上、右、下、左 顺时针</span></span><br></pre></td></tr></table></figure><p>也可以分开写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    padding-top:10px;</span><br><span class="line">    padding-right:10px;</span><br><span class="line">    padding-bottom:15px;</span><br><span class="line">    padding-left:15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果四个一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">padding</span>:10px;&#125;</span><br></pre></td></tr></table></figure><p>如果上下一样、左右一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">padding</span>:10px 20px;&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置外边距</p><p>与内填充类似。</p><p><strong>padding与margin区别为：padding在边框里面，margin在边框外面。</strong></p></li></ol><h1 id="css3布局模型"><a href="#css3布局模型" class="headerlink" title="css3布局模型"></a>css3布局模型</h1><ol><li><p>流动模型（Flow)</p><blockquote><p>流动模型是网页默认的布局模型，主要特征：</p><p>1.块状元素都会在所处的包含元素内自上而下按顺序<strong>垂直延申</strong>，因为在默认状态下，块状元素的宽度为100%。实际上，<strong>块状元素会以行的形式占据位置。</strong></p><p>2.内联元素都会在包含元素内<strong>从左到右水平</strong>分布显示。</p></blockquote></li><li><p>浮动模型(Float)</p><blockquote><p>如果想让块状元素并排显示，可以设置浮动模型。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">width</span>:100px;    height:200px;    border:2px solid red;    float:left;<span class="comment">//左浮动    float:right;//右浮动&#125;</span></span><br></pre></td></tr></table></figure><p><img src="http://img.mukewang.com/540e62c60001c56a06760417.jpg" alt="img"></p><p><img src="http://img.mukewang.com/540e632b0001f5f506760417.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    <span class="attr">width</span>:200px;</span><br><span class="line">    height:200px;</span><br><span class="line">    border:2px solid red;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">#div1&#123;</span><br><span class="line"><span class="attr">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line">#div2&#123;</span><br><span class="line"><span class="attr">float</span>:right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左右浮动</span></span><br></pre></td></tr></table></figure></li><li><p>层模型</p><blockquote><p>层布局模型就像是Photoshop中非常流行的图层编辑功能一样，每个图层都能够精确的定位操作。</p><p>层模型有三种形式：</p><p>1.绝对定位：position :absolute</p><p>2.相对定位：position :relative</p><p>3.固定定位：position :fixed</p></blockquote><ul><li><p>绝对定位</p><blockquote><p>将元素从文档中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个<strong>具有定位属性的父包含快</strong>进行绝对定位，如果不存在这样的包含块，则相对于body元素，即浏览器窗口。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&#123;    <span class="attr">width</span>:200px;    height:200px;    border:2px solid red;    position:absolute;    left:100px;    top:50px;    <span class="comment">/*相对于浏览器窗口向右移动100px，向下移动50px；&#125;</span></span><br></pre></td></tr></table></figure><p><img src="http://img.mukewang.com/53a00b130001e86707360547.jpg" alt="img"></p></li><li><p>相对定位</p><blockquote><p>它通过left、right、top、bottom属性确定元素在<strong>正常文档流中</strong>的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于<strong>以前的位置移动，</strong>移动的方向和幅度由left、right、top、bottom属性确定，<strong>偏移前的位置保留不动。</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#div1&#123;    <span class="attr">width</span>:200px;    height:200px;    border:2px red solid;    position:relative;    left:100px;    top:50px;&#125;&lt;div id=<span class="string">&quot;div1&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="http://img.mukewang.com/53a00d2b00015c4b06190509.jpg" alt="img"></p><p>什么叫偏移前的位置保持不动呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>偏移前的位置还保留不动，覆盖不了前面的div没有偏移前的位置<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="http://img.mukewang.com/541a4bfc0001abef05940489.jpg" alt="img"></p><blockquote><p>从效果图中可以明显的看出，虽然div元素相对于以前的位置产生了偏移，但是div元素以前的位置还是保留着，所以后面的span元素是显示在了div元素以前位置的后面。</p></blockquote></li><li><p>固定定位</p><blockquote><p>fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（<strong>屏幕内的网页窗口</strong>）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed;属性功能相同。以下代码可以实现相对于<strong>浏览器视图</strong>向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#div1&#123;</span><br><span class="line">    <span class="attr">width</span>:200px;</span><br><span class="line">    height:200px;</span><br><span class="line">    border:2px red solid;</span><br><span class="line">    position:fixed;</span><br><span class="line">    right：<span class="number">0</span>；</span><br><span class="line">    bottom：<span class="number">0</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210507194811812.png" alt="image-20210507194811812"></p></li><li><p>绝对定位与相对定位组合使用</p><blockquote><p>使用<code>position:absolute</code>可以实现被设置元素相对于浏览器（body）设置定位以后，大家有没有想过可不可以相对于其它元素进行定位呢？答案是肯定的，当然可以。使用position:relative来帮忙，但是必须遵守下面规范：</p></blockquote><p>参照定位的元素必须是相对定位元素的前辈元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box1&quot;</span>&gt;&lt;!--参照定位的元素--&gt;    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>相对参照元素进行定位<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>&lt;!--相对定位元素--&gt;&lt;<span class="regexp">/div&gt;/</span>*box1是box2的父元素*/</span><br></pre></td></tr></table></figure><p>参照定位元素加入position:relative</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#box1&#123;    <span class="attr">width</span>:200px;    height:200px;    position:relative;        &#125;</span><br></pre></td></tr></table></figure><p>定位元素加入position:absolute</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#box2&#123;    <span class="attr">position</span>:absolute;    top:20px;    left:30px;         &#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210507195709945.png" alt="image-20210507195709945"></p><blockquote><p>图片为box3，文字为box4</p></blockquote></li></ul></li><li><p>弹性盒模型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;        <span class="attr">background</span>: blue;        display: flex;     &#125;    .box div &#123;        <span class="attr">width</span>: 200px;        height: 100px;    &#125;    .box1 &#123;        <span class="attr">background</span>: red;    &#125;    .box2 &#123;        <span class="attr">background</span>: orange;    &#125;    .box3 &#123;        <span class="attr">background</span>: green;    &#125;&lt;body&gt;    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210507200329813.png" alt="image-20210507200329813"></p><blockquote><p>技术点解释：1.设置display：flex属性可以把块级元素在一排显示。</p><p>​                        2.必须在父容器中添加flex。</p><p>​                        3.默认为从左到右依次排列，且和父元素之间没有空隙。</p></blockquote></li><li><p>设置横轴排列方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">justify-content:flex-start|flex-end|center|space-between|space-around;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*交叉轴的起点对齐*/</span>.box&#123;    <span class="attr">backgroud</span>:blue;    diaplay:flex;    justify-content:flex-start;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.mukewang.com/5e959b080001a38d25340322.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*右对齐*/</span>.box&#123;     <span class="attr">backgroud</span>:blue;    diaplay:flex;    justify-content:flex-end;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.mukewang.com/5e959b8b0001d43b25420308.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*居中*/</span>.box&#123;     <span class="attr">backgroud</span>:blue;    diaplay:flex;    justify-content:center;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.mukewang.com/5e959bdd0001ad2125300303.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*两端对齐，项目之间的间隔相等*/</span>.box&#123;     <span class="attr">backgroud</span>:blue;    diaplay:flex;    justify-content:space-between;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.mukewang.com/5e959c6400017b1c25530313.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*每个项目两侧的间隔相等，项目之间都间隔比项目与边框的间隔大一倍。*/</span>.box &#123;        <span class="attr">background</span>: blue;        display: flex;        justify-content: space-around;    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.mukewang.com/5e959caf000113b125370303.jpg" alt="img"></p></li><li><p>设置纵轴排列方式</p><blockquote><p>属性值</p><p>align-items：flex-start|flex-end|center|baseline|stetch;</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*默认值 左对齐 flex-start*/</span></span><br><span class="line">.box&#123;</span><br><span class="line">    <span class="attr">height</span>:700px;</span><br><span class="line">    backgroud:blue;</span><br><span class="line">    display:flex;</span><br><span class="line">    align-items:flex-start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img3.mukewang.com/5e95a3720001140325381051.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*交叉轴的终点对齐 flex-end*/</span></span><br><span class="line">.box&#123;</span><br><span class="line">    <span class="attr">height</span>:700px;</span><br><span class="line">    backgroud:blue;</span><br><span class="line">    display:flex;</span><br><span class="line">    align-items:flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.mukewang.com/5e95a3ca0001550a25381056.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*交叉轴的中点对齐 center*/</span>.box&#123;    <span class="attr">height</span>:700px;    backgroud:blue;    display:flex;    align-items:center;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img3.mukewang.com/5e9667880001796c25371056.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*项目第一行文字的基线对齐 baseline*/</span></span><br><span class="line">.box&#123;</span><br><span class="line">    <span class="attr">height</span>:700px;</span><br><span class="line">    backgroud:blue;</span><br><span class="line">    display:flex;</span><br><span class="line">    align-items:baseline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三个盒子中设置不同的字体大小，可以实现一下效果。</p><p><img src="https://img3.mukewang.com/5e9668ff0001f8f125341053.jpg" alt="img"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*默认值 stretch*/</span></span><br><span class="line">.box &#123;</span><br><span class="line">        <span class="attr">height</span>: 300px;</span><br><span class="line">        background: blue;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: stretch;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box div &#123;</span><br><span class="line">        <span class="comment">/*不设置高度，元素在垂直方向上铺满父容器*/</span></span><br><span class="line">        <span class="attr">width</span>: 200px;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.mukewang.com/5e9669ef00017e0e25390453.jpg" alt="img"></p></li><li><p>给子元素设置flex占比（相对于父元素）</p><blockquote><ol><li>给子元素设置flex属性，可以设置元素相对于父元素的占比。</li><li>flex属性的值只能是正整数，表示占比多少</li><li>给子元素设置了flex属性后，其宽度值会失效。</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    .box &#123;</span><br><span class="line">        <span class="attr">height</span>: 300px;</span><br><span class="line">        background: blue;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box div &#123;</span><br><span class="line">        <span class="attr">width</span>: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box1 &#123;</span><br><span class="line">        <span class="attr">flex</span>: <span class="number">1</span>;</span><br><span class="line">        background: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box2 &#123;</span><br><span class="line">        <span class="attr">flex</span>: <span class="number">3</span>;</span><br><span class="line">        background: orange;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box3 &#123;</span><br><span class="line">        <span class="attr">flex</span>: <span class="number">2</span>;</span><br><span class="line">        background: green;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>flex:1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>flex:3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>flex:2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\OMEN\AppData\Roaming\Typora\typora-user-images\image-20210507204508184.png" alt="image-20210507204508184"></p></li></ol><h1 id="css设置小技巧"><a href="#css设置小技巧" class="headerlink" title="css设置小技巧"></a>css设置小技巧</h1><ol><li><p>水平居中设置-行内元素</p><p>如果被设置元素为文本、图片等行内元素，水平居中是通过给父元素设置text-align：center来实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .txtCenter&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txtCenter&quot;</span>&gt;</span>我要水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>水平居中设置-定宽块状元素</p><p>可以通过设置左右margin的值为“auto”来实现居中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        <span class="attr">border</span>:1px solid red;</span><br><span class="line">        width:100px; <span class="comment">//设置定宽，不可缺失此条件</span></span><br><span class="line">        margin:100px auto;<span class="comment">//100px为上下间距的值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>已知宽高实现盒子的水平居中</p><p>已知有两个div元素，要实现子元素相对于父元素垂直水平居中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父元素</span></span><br><span class="line">.box&#123;</span><br><span class="line">    <span class="attr">border</span>:100px solid red;</span><br><span class="line">    height:300px;</span><br><span class="line">    position:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子元素</span></span><br><span class="line">.box1&#123;</span><br><span class="line">    <span class="attr">width</span>:200px;</span><br><span class="line">    height:200px;</span><br><span class="line">    border:1px solid red;</span><br><span class="line">    position:absolute;</span><br><span class="line">    top:<span class="number">50</span>%;</span><br><span class="line">    left:<span class="number">50</span>%</span><br><span class="line">    margin:-100px <span class="number">0</span> <span class="number">0</span> -100px;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>技术点解释：</p><p>1.利用父元素设置相对定位，子元素设置绝对定位。</p><p>2.子元素设置上和左偏移都是50%，则元素的左上角在父元素的中心位置。（如下图）</p><p>3.然后再用margin给上和左设置负的自身宽和高的一半，就能达到垂直水平居中的效果。</p></blockquote><p><img src="https://img2.mukewang.com/5e967c3d0001fbbf25600616.jpg" alt="img"></p></li><li><p>宽高不定实现盒子水平居中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    <span class="attr">border</span>:2px solid red;</span><br><span class="line">    height:300px;</span><br><span class="line">    position:relative;</span><br><span class="line">&#125;</span><br><span class="line">.box1&#123;</span><br><span class="line">    <span class="attr">border</span>:1px solid red;</span><br><span class="line">    position:absolute;</span><br><span class="line">    top:<span class="number">50</span>%;</span><br><span class="line">    left:<span class="number">50</span>%;</span><br><span class="line">    transform:translate(-<span class="number">50</span>%, -<span class="number">50</span>%);<span class="comment">//与上一个类似，中间有空格</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>技术点解释：</p><ol><li>.利用父元素设置相对定位，子元素设置绝对定位</li><li>子元素设置上和左偏移都为50%</li><li>然后利用css3属性translate位移，给上和左位移-50%的距离，就能实现居中的效果。</li></ol></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端三剑客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript学习</title>
      <link href="2021/05/31/javaScript%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/05/31/javaScript%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="js书写位置"><a href="#js书写位置" class="headerlink" title="js书写位置"></a>js书写位置</h1><ol><li><p>行内式的js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;唐博湖&quot;</span> onclic=<span class="string">&quot;alert(&#x27;秋香姐&#x27;)&quot;</span>&gt;<span class="comment">//onclic弹出框</span></span><br></pre></td></tr></table></figure></li><li><p>内嵌式的js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    alert(<span class="string">&#x27;沙摩洛多&#x27;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>外部式的js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建新文件my.js</span><br><span class="line">alert(<span class="string">&#x27;内容&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">&quot;my.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">//中间不能加入内容，且用单引号</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ol><li>单行注释：//内容  (ctrl+/)</li><li>多行注释：/*  */ (shift+alt+a)</li></ol><h1 id="输入、输出语句"><a href="#输入、输出语句" class="headerlink" title="输入、输出语句"></a>输入、输出语句</h1><ol><li><p>prompt（‘请输入内容‘）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    propmt(<span class="string">&#x27;请输入您的内容&#x27;</span>)；</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>弹出警示框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">&#x27;弹出的内容&#x27;</span>)；</span><br></pre></td></tr></table></figure></li><li><p>控制台输出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;我是程序员能看到的内容&#x27;</span>)；</span><br><span class="line"><span class="comment">//不会在网页显示，需要点击f12查看</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="声明变量以及初始化"><a href="#声明变量以及初始化" class="headerlink" title="声明变量以及初始化"></a>声明变量以及初始化</h1><p>var age=18;</p><p>var myname=dongdong;</p><p>var是varible的缩写,各种类型的变量均使用var来定义。</p><p><strong>不声明变量直接给变量赋值，仍然能输出，但是不提倡，此变量为全局变量。</strong></p><p>变量命名规范：</p><ul><li>与java类似，由数字，字母，下划线。美元符号组成；</li><li>不能以数字开头</li><li>不能以关键字作为变量名</li><li>遵循驼峰命名法：首字母小写，后面单词的首字母要大写。：myFirstame </li><li>name在一些浏览器有特殊的含义，一般不用作变量名。</li></ul><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ol><li><p>js的变量数据类型是只有在程序运行过程，很具等号右边的值来确定的。</p></li><li><p>js是动态语言，数据类型是可以变的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> x=<span class="number">10</span>;<span class="comment">//正确</span></span><br></pre></td></tr></table></figure></li><li><p>简单数据类型</p><ul><li><p>数字型：Number  默认值为0   </p><ul><li>最大值：NUmber.MAX_VALUE </li><li>最小值：Number.MIN_VALUE </li><li>无穷大：Infinity   无穷小：-Infinity  </li><li>非数字：NaN</li><li>判断非数字：isNaN（）；若是非数字：true 否：flase</li></ul></li><li><p>字符串型：</p><ul><li>String 推荐使用单引号</li><li>引号嵌套：外双内单，外单内双    </li><li>检测字符串的长度：str.length;</li><li>字符串的拼接：‘沙漠’+’骆驼’；//各种类型均能拼接，与jjava相同</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;我是一只&#x27;快乐且单身&#x27;的程序员！&quot;</span></span><br></pre></td></tr></table></figure><ul><li><p>转义字符：\n;换行</p><p>​                    \:斜杠</p><p>​                    &#39;:单引号</p><p>​                    &quot;:双引号</p><p>​                    \t:tab缩进</p><p>​                    \b:空格。b是blank的缩写</p></li></ul></li><li><p>布尔型：boolean</p></li><li><p>Undefined:var a；声明了变量a但是没有给值，此时a=undefined；</p></li><li><p>Null：var a=null;声明了变量a为空值；</p></li><li><p>检测变量数据类型：typeof 变量</p><p>黑色：String型      蓝色：数字型   深蓝色：布尔型   浅灰色：null 和defined</p></li></ul></li><li><p>数字类型转化</p><ul><li><p>使用表单和prompt获取的数据默认是字符串型</p></li><li><p>转化成字符串：</p><ul><li><p>```javascript<br>var num=10;var str=num.toString();</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```javascript</span><br><span class="line">  console.log(String(num));</span><br></pre></td></tr></table></figure></li><li><p>```javascript<br>console.log(num+””);//最常用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 转化成数字型</span><br><span class="line"></span><br><span class="line">  + ```javascript</span><br><span class="line">    var age=prompt(&#x27;输入年龄&#x27;)；console.log(parseInt(age));//只能得到整数console.log(parseFloat(age));//转化成小数</span><br></pre></td></tr></table></figure></li><li><p>```javascript<br>console.log(Number(age)); </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```javascript</span><br><span class="line">  利用算数运算(-,*,\)console.log(&#x27;133&#x27;-0);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>转化成布尔型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">&#x27;&#x27;</span>));<span class="comment">//false:&#x27;&#x27;,0,NaN,null,undenfined//true:除了上面的5种类型外，均为true</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ol><li><p>比较运算符：</p><ul><li>“==”会自动转化数据类型，例如：18==“18”</li><li>“===”：全等符号：数据类型和值都相等</li></ul></li><li><p>逻辑运算符：</p><p>&amp;&amp;、||、！</p><p>逻辑中断（短路运算）：</p><ul><li>表达式1&amp;&amp;表达式2：如果表达式1为真，则返回表达式2；如果表达式1为假，则返回表达式2.</li><li>表达式1||表达式2：如果表达式1为真，则会返回表达式1；如果表达式1为假，则返回表达式2.</li><li>&amp;&amp;的优先级高于||</li></ul></li></ol><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ol><li><p>定义数组：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array=<span class="keyword">new</span> <span class="built_in">Array</span>[];<span class="comment">//或者var array=[];//空数组</span></span><br></pre></td></tr></table></figure></li><li><p>输出数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conslole.log(array);<span class="comment">//直接输出整个数组//若要挨个输出，则使用循环遍历</span></span><br></pre></td></tr></table></figure></li><li><p>改变数组元素个数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>array.length=n;<span class="comment">//重新给数组元数个数赋值2.array[5]=10；//加入原来数组有4个元素</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ol><li><p>函数声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params"></span>)</span>&#123;    <span class="comment">//函数体&#125;//函数名一般是动词，函数不调用自己不执行</span></span><br></pre></td></tr></table></figure></li><li><p>函数调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名（）；<span class="comment">//函数不调用，自己不执行</span></span><br></pre></td></tr></table></figure></li><li><p>函数的参数</p><ul><li><p>形参直接写变量名就行，不用声明数据类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">num1,num2</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果实参个数小于形参个数，则为undifine</p></li></ul></li><li><ul><li>return之后的代码不会被执行</li><li>return只能返回一个值，且返回后面那个值</li><li>要想返回多个值，需要返回一个数组</li><li>如果函数没有return，则返回undefined</li></ul></li><li><p>arguments:储存了所有的实参，以数组形式，但没有真正数组的一些方法。(函数内置好的对象)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;        <span class="comment">//arguments为默认的内置对象        function fun()&#123;            // console.log(arguments);            for(var i=0;i&lt;arguments.length;i++)&#123;            console.log(arguments[i]);        &#125;        &#125;        fun(1,2,3);            &lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>另一种声明方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var num=function(are)&#123;consloe.log(are)&#125;num(&quot;你好&quot;)；</span><br></pre></td></tr></table></figure></li></ol><h1 id="js作用域"><a href="#js作用域" class="headerlink" title="js作用域"></a>js作用域</h1><ol><li><ul><li><p>全局作用域：整个script标签或者是单独文件    </p><p>全局变量：在浏览器关闭时才会销毁，比较占内存</p></li><li><p>局部作用域：函数内部，只在函数内部起作用</p><p>局部变量：执行完函数就会直接销毁，节省内存</p></li></ul></li><li><p>js没有块级作用域：{}  if{}  for{}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a&gt;<span class="number">5</span>)&#123;    <span class="keyword">var</span> num=<span class="number">10</span>;&#125;<span class="comment">//在循环外面仍然可以调用numconsole.log(num);</span></span><br></pre></td></tr></table></figure></li><li><p>作用域链：内部函数访问外部函数的变量，采用链式查找，一层一层的查找，就近原则。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;    <span class="keyword">var</span> num=<span class="number">12</span>;    <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;        <span class="built_in">console</span>.log(num);&#125;    f2();<span class="comment">//执行&#125;var num=23;f1();//输出结果为12；</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h1><ol><li><p>js引擎运行js分为2步：预解析，执行代码</p></li><li><p>引擎会把所有的var和function提升到当前作用域的最前面。</p></li><li><ul><li><p>变量预解析：就是把所有的<strong>变量声明</strong>提升到当前作用域最前面。（不提升赋值）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun();<span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;    <span class="built_in">console</span>.log(<span class="number">12</span>);&#125;<span class="comment">//正确，会提升function fun()&#123;console.log(12);&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun();<span class="keyword">var</span> fun=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;    consolr,log(<span class="number">12</span>);&#125;<span class="comment">//错误，提升的是var fun；</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>,log(num);<span class="keyword">var</span> num=<span class="number">12</span>;<span class="comment">//输出为undefined//会提升var num；但没有赋值</span></span><br></pre></td></tr></table></figure></li><li><p>函数提升：把所有的函数声明提到最前面。</p></li><li><p>```javascript</p><script>        fun();        function fun(){            var a=b=c=9;             //var a=9;            // b=9;            // c=9;  b和c为全局变量            console.log(a);            console.log(b);            console.log(c);        }        console.log(b);        console.log(c);        console.log(a);        //预解析        // function fun(){        //     var a=9;        //     b=9;        //     c=9;        //     console.log(a);        //     console.log(b);        //     console.log(c);        // }        // console.log(a);        // console.log(b);        // console.log(c);            </script><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#  js对象</span><br><span class="line"></span><br><span class="line">1. 创建对象：</span><br><span class="line"></span><br><span class="line">   - 利用字面量&#123;&#125;:</span><br><span class="line"></span><br><span class="line">     ```javascript</span><br><span class="line">     var obj=&#123;    uname:&quot;zhagsanfeng&quot;,    age:18,    sex:&quot;男&quot;,    sayHI:function()&#123;        console.log(&quot;hi&quot;)    &#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>多个属性和方法之间用逗号隔开</li><li>赋值时用冒号</li><li>方法冒号后面跟着的是一个匿名函数</li><li>使用对象：对象名.属性    或者   对象名[‘属性名‘]</li></ul></li></ul><ul><li><p>用new</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=<span class="keyword">new</span> Object();obj.name=<span class="string">&quot;nihao1&quot;</span>;obj.age=<span class="number">12</span>;obj.sayhi=function()&#123;    soncsole.log(<span class="string">&quot;niaho1&quot;</span>);&#125;</span><br></pre></td></tr></table></figure><ul><li>多个属性之间用分号隔开</li><li>赋值时用等号</li></ul></li><li><p>利用构造函数创建对象(类似于类）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 构造函数名(<span class="params"></span>)</span>&#123;<span class="built_in">this</span>.属性=值；    <span class="built_in">this</span>.方法=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;            &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">name,age,sex</span>)</span>&#123;    <span class="built_in">this</span>.name=name;    <span class="built_in">this</span>.sge=age;    <span class="built_in">this</span>.sex=sex;      <span class="built_in">this</span>.sing=<span class="function"><span class="keyword">function</span>(<span class="params">song</span>)        <span class="title">console</span>.<span class="title">log</span>(<span class="params">song</span>)</span>;&#125;&#125;<span class="keyword">var</span> ldh=<span class="keyword">new</span> Star(<span class="string">&#x27;楼的话&#x27;</span>，<span class="number">16</span>，’男);ldh.sing(<span class="string">&quot;冰雨&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>遍历对象</p><blockquote><p>for in可以遍历数组和对象</p></blockquote> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> obj)&#123;    <span class="built_in">console</span>.log(k);<span class="comment">//属性    console.log(obj[k]);//值&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>内置对象</p><ul><li><p>查阅文档：MDN</p></li><li><p>math:</p><ul><li></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.max();<span class="comment">//取最大值Math.abs(-1);//取绝对值  Math.abs(&#x27;-1&#x27;);//值也为1</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三个取整数方法Math.floor();//向下取整数，floor为地板Math.ceil();//向上去整数，ceil为天花板Math.round();//四舍五入，但是.5往大了取：0.5取1，-1.5取-1</span></span><br></pre></td></tr></table></figure><ul><li><p>取随机数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取0-1之间的随机小数，0=&lt;x&lt;1console.log(Math.random());</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到两个数之间的随机数,但是取不到maxfunction getRandomArbitrary(min,max)&#123;    return MAth.random()*(max-min)+min;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到两个数之间的随机整数，取不到最大数function getRandomInt(min,max)&#123;    min=Math.ceil(min);    max=Math.floor(max);    return Math.floor(Math.random*(max-min))+min;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到两个数之间的随机整数。，包括边界function getRandomInt(min,max)&#123;    min=Math.ceil(min);    max=Math.floor(max);    return Math.floor(Math.random*(max-min+1))+min;&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Date：</p><ul><li><p>Date是一个构造函数，必须用new实例化才能使用</p></li><li><p>如果没有参数，则返回当前时间</p></li><li><p>输入时间有2种：1. 2020，20，1</p><p>​                              2.’2020-10-2’</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date1=<span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">//当前时间var date2=new Date(2020,10,2);//会自动往后增加一个月var date2=new Date(&#x27;2020-10-2&#x27;);</span></span><br></pre></td></tr></table></figure></li><li><p>日期的格式化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date.getaFullYear();<span class="comment">//返回当前的年份date.getMonth();//返回当前月份,但是月份会减1，以0-11来记date.getDate();//返回日期date.getDay();//返回星期，周一返回，周六返回6，周日返回0date.getHours();//小时date.getMinutes();//分钟数date.getSesonds();//秒数</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出当前时间的案例&lt;script&gt;       var date=new Date();       var year=date.getFullYear();       var month=date.getMonth();       var day=date.getUTCDate();       var h=date.getHours();       h=h&lt;10?&quot;0&quot;+h:h;       var m=date.getMinutes();       m=m&lt;10?&quot;0&quot;+m:m;       var s=date.getSeconds();       s=s&lt;10?&#x27;0&#x27;+s:s;       var arr=[&quot;星期日&quot;,&quot;星期一&quot;,&quot;星期二&quot;,&quot;星期三&quot;,&quot;星期四&quot;,&quot;星期五&quot;,&quot;星期六&quot;];       function getDate()&#123;           return &quot;现在的时间为：&quot;+year+&quot;年&quot;+month+&quot;月&quot;+day+&quot;日&quot;+h+&quot;:&quot;+m+&quot;:&quot;+s+&quot; &quot;+arr[date.getDay()];       &#125;       console.log(getDate());    &lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>获得Date总的毫秒数，不是指当前时间的毫秒数，而是距1970年1月1号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();<span class="built_in">console</span>.log(date.valueOf());<span class="built_in">console</span>.log(date.getTime());<span class="comment">//最简单的写法var date1=+new Date();//H5新增的方法console.log(Date.now());</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>数组对象</p><ol><li>创建数组：</li></ol><ul><li>```java<br>var arr=[1,23,3];//直接创建<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```java</span><br><span class="line">  var arr=new Array();//空数组var arr=new Array(2);//表示数组有2个元素，但是仍然是空数组var arr=new Array(1,2,3);//表示数组有三个元素：1，2，23</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>检测是否为数组</p><ul><li>```javascript<br>console.log(arr instanceof Array);//instanceof相当于“属于”的意思<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```javascript</span><br><span class="line">  //Array.isArray(参数);console,log(Array.isArray(arr));</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加或者删除数组的元素</p><ul><li><p>在数组末尾添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//push(元素)var arr=[1,2,3];arr.push(4,&quot;pink&quot;);//返回值为数组的长度comsole.log(arr);//返回新数组</span></span><br></pre></td></tr></table></figure></li><li><p>在数组前面添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//unshift(元素)arr.unshift(4,&#x27;nihao1&#x27;);//返回值仍为数组的长度console.log(arr);//返回新数组</span></span><br></pre></td></tr></table></figure></li><li><p>删除数组的最后一个元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pop();没有参数,且一次只能删除一个元素arr.pop();//返回值为删除元素的值console.log(arr);//返回新数组</span></span><br></pre></td></tr></table></figure></li><li><p>删除数组的第一个元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shift();没有参数，且一次只能删除一个arr.shift();//返回值为删除的那个元素console.log(arr);//返回数组</span></span><br></pre></td></tr></table></figure></li></ul><p>4.翻转数组</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//reversevar arr=[1,2,3];arr.reverse();</span></span><br></pre></td></tr></table></figure><p>5.数组排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sortarr.sort();//升序排列，但是按照字符串排列</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照值进行排序arr.sort(function(a,b)&#123;    return a-b;//升序    return b-a;//降序&#125;);</span></span><br></pre></td></tr></table></figure><blockquote><p>如果指明了 <code>compareFunction</code> ，那么数组会按照调用该函数的返回值排序。即 a 和 b 是两个将要被比较的元素：</p><ul><li><p>如果 <code>compareFunction(a, b)</code> 小于 0 ，那么 a 会被排列到 b 之前；</p></li><li><p>如果 <code>compareFunction(a, b)</code> 等于 0 ， a 和 b 的相对位置不变。备注： ECMAScript 标准并不保证这一行为，而且也不是所有浏览器都会遵守（例如 Mozilla 在 2003 年之前的版本）；</p></li><li><p>如果 <code>compareFunction(a, b)</code> 大于 0 ， b 会被排列到 a 之前。</p></li><li><p><code>compareFunction(a, b)</code> 必须总是对相同的输入返回相同的比较结果，否则排序的结果将是不确定的。</p></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a, b</span>) </span>&#123;  <span class="keyword">if</span> (a &lt; b ) &#123;           <span class="comment">// 按某种排序标准进行比较, a 小于 b    return -1;  &#125;  if (a &gt; b ) &#123;    return 1;  &#125;  // a must be equal to b  return 0;&#125;</span></span><br></pre></td></tr></table></figure><p>6.查找数组的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//indexof,从前面开始查找，若没有元素，则返回-1var arr=[1,2,3,4];console.log(arr.indexOf(1));//返回值为0console.log(arr.indexOf(5));//返回值为-1//lastindexof，从后面开始查找，但是索引值不发生改变console.log(arr.lastindexOf(1));//返回值为0</span></span><br></pre></td></tr></table></figure><p>7.数组转换为字符串</p><ul><li>```javascript<br>//toString();var arr=[1,23,4];cosole.log(arr.toString());<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```javascript</span><br><span class="line">  join();可以改变分隔符var arr1=[1,2,34,5];comsole.log(arr.join(&#x27;-&#x27;));//用横杠来进行分割</span><br></pre></td></tr></table></figure></li></ul></li></ol></li><li><p>字符串对象</p><ol><li><p>基本包装类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//基本包装类型就是把简单数据类型转化为复杂数据类型,String、Number、BOllean，会增加一些属性var atr=&#x27;andy&#x27;;console.log(atr.length);//其实质为:var temp=new String(&#x27;andy&#x27;);str=temp;temp=null;</span></span><br></pre></td></tr></table></figure></li><li><p>字符串的不可变性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;zhangruiqi&quot;</span>;str=<span class="string">&quot;wud&quot;</span>;<span class="comment">//此时字符串的h值变为wud，但是并不是原来的值发生改变，二十新开辟了一个内存空间存放，原来的值仍然在原内存空间存放</span></span><br></pre></td></tr></table></figure></li><li><p>根据字符返回位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;改革春风吹满地,春天来了&quot;</span>;<span class="built_in">console</span>.log(str.indexOf(<span class="string">&#x27;春&#x27;</span>))<span class="comment">//返回值为2console.log(str.insexOf(&#x27;春&#x27;,3));//从索引为3的元素开始查找，返回值为8</span></span><br></pre></td></tr></table></figure></li><li><p>根据位置返回字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.charAt(index);var str=&quot;ascdf&quot;;console,log(str.charAt(1));//返回的值为s//2.charCodeAt(index);返回的是字符的ASCII码  目的：用来判断用户输入的是什么键console.log(str.charCodeAt(0));//返回的值为65；//3.str[index],HTML5，IE8支持，与charAt相同console.log(str[1]);</span></span><br></pre></td></tr></table></figure></li><li><p>拼接字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//str.concat(&#x27;字符串&#x27;);var str=&#x27;asdg&#x27;;console.log(str.concat(&#x27;nihao&#x27;));</span></span><br></pre></td></tr></table></figure></li><li><p>截取字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//substr(start,length)var str=&#x27;asdfghj&#x27;;console,log(str.substr(1,2));//从索引为1的位置取，取2个；结果为sd</span></span><br></pre></td></tr></table></figure></li><li><p>替换字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//str.replace(&#x27;要替换的字符串&#x27;，&#x27;替换后的字符串&#x27;)；//但是只能替换一个字符，要想替换多个需要用到数组var str=&#x27;avcsacs&#x27;;console.log(atr.replace(&#x27;a&#x27;,&#x27;*&#x27;));//只替换的一个a//替换所有awhile(str.indexOf(&#x27;a&#x27;)！=-1)&#123;   str1=str.replace(&#x27;a&#x27;,&#x27;8&#x27;)&#125;；</span></span><br></pre></td></tr></table></figure></li><li><p>字符串转化为数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//split(&#x27;分隔符&#x27;)var str1=&#x27;red,pink,blue&#x27;;console.log(str1.split(&#x27;,&#x27;));var atr2=&#x27;red&amp;pinkl&amp;ij&#x27;;console.log(atr2.split(&#x27;&amp;&#x27;));</span></span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>数据类型与内存分配</p><ul><li><ul><li><p>简单数据类型：也叫基本数据类型，在储存变量时储存的是值本身，因此叫叫作值类型：string 、number、boolean、undefined、null</p></li><li><p><strong>null特殊，储存的是一个空对象</strong></p></li><li><p>简单数据类型储存在栈内存中</p></li><li><p>在进行传参时，进行值传递</p></li></ul></li><li><ul><li>复杂数据类型：在储存时变量中储存的仅仅时地址（引用）用十六进制表示，因此叫作引用数据类型</li><li>通过new关键字创建的对象（系统对象，自定义对象），如：Object,Array,Date等，数组也是</li><li>变量中储存的是地址（该地址指向堆内存），储存在栈内存中，但是真正的值储存在堆内存中</li><li>在进行传参时，传递的是地址</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端三剑客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
